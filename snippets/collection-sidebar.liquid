<style>
  .advanced-filters{
    display: flex;
    flex-direction: column;
  }
  .list-group-item a{
    font-size: 14px !important;
    line-height: 30px;
  }
 .list-group-item,.slider-range,.meta-field-flter{
   display:none;
   margin-bottom: 10px !important;
 }
  .pricing_range .filter-label{
    padding-bottom:0 !important;
  }
  .filter-attribute-container{
    border-bottom:1px solid;
  }
 
  .filter-attribute-container:last-child{
    border-bottom:1px solid;
    
  }
  .dropdown-icon svg{
    width: 20px;
    fill: white;
  }
  .filter-label{
    display: flex !important;
    justify-content: space-between;
    cursor:pointer;
  }
  .dropdown-icon svg{
    transition: transform 0.3s ease;
  }
  .active .dropdown-icon svg{
    transform: rotate(180deg);
  }
  .slider-range {
    margin-top: 35px;
  }
.make,
  .gen,
.COLOR,
  .model,
.genERATION,
.MODEL,
.VDERSION,
.VERSION,
.Version,
.Product,
.shape
/* .newcat, */
  {
    display:none;
}
.filter-label{
  background-image: url(https://cdn.shopify.com/s/files/1/0754/9268/8152/files/arrowpng.parspng.com-13.webp);
    background-size: 25px;
    background-repeat: no-repeat;
    background-position: right;
}
.filter-label.active{
 background-image: url(https://cdn.shopify.com/s/files/1/0754/9268/8152/files/arrowpng.png);

}
.active-filter a:after{
  background-color: #e51515;
}
.active-filter a:hover:after {
    content: "x";
    top: 4px;
    left: 1px;
    width: 15px;
    height: 15px;
    background-color: #e51515;
    font-size: 8px;
    text-align: center;
    color: #21252c;
    font-family: icons;
    line-height: 15px;
    speak: none;
}
#product-category .list-group{
  display: flex;
    flex-direction: column;
}
.newcat{
order: 1;
}
.filter-attribute-container.make{
      order: -2;
}
 .filter-attribute-container.model{
     order: -1;
  }
.newcat .list-group-item{
  display: block !important;
}
.newcat .filter-label{
      background-image: unset;
}
  .filter-label{
    text-transform:uppercase !important;
  }
  #side_filter_bar{
    order:2;
  }
  .layernavigation-module .dropdown-icon svg{
    display:none;
  }
  .booking-form  .row{
    display:flex;
    flex-direction:column;
  }
  .booking-form .col-sm-3{
    width:100%;
  }
  .booking-form{
    border:0;
  }
</style>



<div class="sidebar-overlay"></div>
<div class="oc-menu" id="sidebar-toggle">
  <input type="hidden" id="menu-effect-{{section.id}}" class="menu-effect" value="none">
  <div class="oc-menu-bar visible-sm visible-xs">
    <div class="text-center">
      <i class="icon-menu" aria-hidden="true"></i>
      <span style="cursor:pointer">{{ 'collections.sidebar.sidebar_filters' | t }}</span>
    </div>
  </div>
</div>
<aside id="column-left" class="col-sm-12 col-md-3">
  <h2>FILTER BY</h2>
  <div class="layernavigation-module">
    <div class="panel panel-default">
      {% if page_title != 'Products' %}
        <div class="panel-heading layered-heading">
          {{ page_title }}
        </div>
      {% endif %}
      <div class="layered">
        <div class="list-group">
          <div class="filter-attribute-container filter-attribute-remove-container"></div>
          {% for block in section.blocks %}
            {% if block.type == 'categories' %}
              <!-- Sidebar Categories -->
              <div class="filter-attribute-container filter-categories">
                <label>{{ 'collections.sidebar.categories' | t }}</label>
                <div class="list-group-item">
                  <div id="filter-group0">
                    {% for collection1 in collections limit: block.settings.category_count %}
                      {% unless collection1.handle == 'frontpage' or collection1.handle == 'all' %}
                        <a
                          class="a-filter add-filter {% if collection1.handle == collection.handle %} active {% endif %}"
                          href="{{ collection1.url }}"
                        >
                          {{- collection1.title }} (
                          {{- 'collections.general.items_with_count' | t: count: collection1.all_products_count -}}
                          )</a
                        >
                      {% endunless %}
                    {% endfor %}
                  </div>
                </div>
              </div>
            {% elsif block.type == 'links' %}
              <!-- Shows a link menu selected from settings -->
              {% if block.settings.collection_sidebar_menu != blank %}
                <div class="filter-attribute-container filter-categories">
                  <label>{{ linklists[block.settings.collection_sidebar_menu].title }}</label>
                  <div class="list-group-item">
                    <div id="filter-group0">
                      {% for link in linklists[block.settings.collection_sidebar_menu].links %}
                        <a class="a-filter add-filter {% if link.active %} active {% endif %}" href="{{link.url}}">
                          {{- link.title -}}
                        </a>
                      {% endfor %}
                    </div>
                  </div>
                </div>
              {% endif %}
            {% elsif block.type == 'vendors' %}
              <!-- add the vendor as product tag to product then use this code in collection.liquid -->
              <!-- if we are on a collection page that is either custom or smart -->
              <div class="filter-attribute-container filter-categories">
                {% if block.settings.show_vendors_title %}
                  <label>{{ 'collections.sidebar.vendors' | t }}</label>
                {% endif %}
                <div class="list-group-item">
                  <div id="filter-group0">
                    {% for product_vendor in collection.all_vendors %}
                      {% if current_tags contains product_vendor %}
                        {{ product_vendor | link_to_vendor: class: ' a-filter add-filter active' }}
                      {% else %}
                        {{ product_vendor | link_to_vendor: class: ' a-filter add-filter' }}
                      {% endif %}
                    {% endfor %}
                  </div>
                </div>
              </div>
            {% elsif block.type == 'filters' %}
              {% comment %}
          The code below relies on the advanced-tag-loop snippet.
          The snippet is already included in snippets/breadrumbs.liquid
          because it is needed there too, but if you remove
          breadcrumbs you need to include this:

          {% endcomment %}
          {% include 'advanced-tag-loop' %}

          {% if block.settings.collection_sidebar_filters == 'groups' %}
          {% if collection.all_tags.size > 0 %}
          {% comment %}
          Loop through tag categories
          {% endcomment %}
          {% for cat_item in cat_array %}
          <div class="filter-attribute-container {{ cat_item }}">
            <label class="filter-label">{% if cat_item contains 'gen' %}
  Generation
{% elsif cat_item contains 'newcat' %}
  Accessories
{% else %}
  {{ cat_item }}
{% endif %}
            </label>
            <div class="list-group-item">
              <div id="filter-group{{forloop.index}}" class="advanced-filters" data-filter-group="{{ cat_item }}">
                {% comment %}
                Loop through collection tags
                {% endcomment %}
                {% for tag in collection.all_tags %}
                {% assign cat = tag | split: '_' | first %}              
                {% if cat != tag and cat_item == cat %}

                {% comment %}
                Code for adding styling for color boxes
                {% endcomment %}
                {% assign color_class = ''%}
                {% capture color_style %} {%endcapture%}
                {% if section.settings.show_color_box and section.settings.color_box_variant != blank %}
                {% assign color_class = tag | remove_first: cat_item | remove_first: '_' | prepend:'bg-' %} 
                {% capture color_style %}style="background-color:{{ tag | remove_first: cat_item | remove_first: '_' }}"{% endcapture %}
                {% endif %}

                {% comment %}
                Strip out tag category prefix and add/remove link for tag filtering
                {% endcomment %}
                {% if current_tags contains tag %}
                <span class="active-filter {{ color_class }}" >
                  {{ tag | remove_first: cat_item | remove_first: '_' | link_to_remove_tag: tag }}
                </span>
                {% else %}
                <span class="{{ color_class }}" >
                  {{ tag | remove_first: cat_item | remove_first: '_' | link_to_add_tag: tag }}
                </span>
                {% endif %}
                {% endif %}
                {% endfor %}

              </div>
            </div>
          </div>
          {% endfor %}

          {% endif %}
          {% else %}
          <div class="filter-attribute-container ">
            <label class="filter-label">{{ 'collections.sidebar.shop_by' | t }}</label>
            <div class="list-group-item">
              <div id="filter-group{{forloop.index}}">
                {% if template contains 'collection' and collection.all_tags.size > 0 %}
                {% comment %}
                Provide a 'catch-all' link at the top of the list,
                we'd check against the collection.handle, product type, and vendor.
                {% endcomment %}
                {% if current_tags %}
                {% comment %}
                Good for /collections/all collection and regular collections
                {% endcomment %}
                {% if collection.handle %}
                <a href="/collections/{{ collection.handle }}">
                  {{ 'collections.sidebar.all' | t }}
                  {% unless collection.title == 'Products' %}
                  {{ collection.title }} ({{ collection.count }})
                  {% endunless %}
                </a>
                {% comment %}
                Good for automatic type collections
                {% endcomment %}
                {% elsif collection.current_type %}
                <a href="{{ collection.current_type | url_for_type }}">{{ 'collections.sidebar.all_collection' | t: collection_title: collection.title }}</a>
                {% comment %}
                Good for automatic vendor collections
                {% endcomment %}
                {% elsif collection.current_vendor %}
                <a href="{{ collection.current_vendor | url_for_vendor }}">{{ 'collections.sidebar.all_collection' | t: collection_title: collection.title }}</a>
                {% endif %}
                {% endif %}
                {% comment %}
                And for the good stuff, loop through the tags themselves.
                Strip the prepended categories if they happen to exist.
                {% endcomment %}
                {% for tag in collection.all_tags %}
                {% assign is_advanced_tag = false %}
                {% assign cat = tag | split: '_' | first %}
                {% unless cat == tag %}
                {% if cat_array contains cat %}
                {% assign is_advanced_tag = true %}
                {% if current_tags contains tag %}
                <span class="active-filter">
                  {{ tag | remove_first: cat | remove_first: '_' }}
                </span>
                {% else %}
                <span>
                  {{ tag | remove_first: cat | remove_first: '_' | link_to_tag: tag }}
                </span>
                {% endif %}
                {% endif %}
                {% endunless %}
                {% if is_advanced_tag == false %}
                {% if current_tags contains tag %}
                {{ tag }}
                {% else %}
                {{ tag | link_to_tag: tag }}
                {% endif %}
                {% endif %}
                {% endfor %}
                {% else %}
                <p>{{ 'collections.sidebar.no_tags' | t }}</p>
                {% endif %}
              </div>
            </div>
          </div>
          {% endif %}
              <div id="side_filter_bar">
                {%- for filter in collection.filters -%}
                  {%- case filter.type -%}
                    {%- when 'list' -%}
                      {% assign flbl = filter.label | handleize %}

                      {% comment %}
                        Code for adding styling for color boxes
                      {% endcomment %}
                      {% capture color_style %} {% endcapture %}
                      {% assign colorbg = false %}
                      {% if section.settings.show_color_box
                        and section.settings.color_box_variant != blank
                        and section.settings.color_box_variant contains flbl
                      %}
                        {% assign colorbg = true %}
                        {% capture color_style %}style="background-color:{{ filter_value.label | prepend: 'bg-' }}"{% endcapture %}
                      {% endif %}

                      <div class="widget {% if colorbg == true %}color_checkbox {{ section.settings.filters_color_design }} {% else %} {{ section.settings.filters_check_design }}{% endif %}  filter-attribute-container {{ filter.label }}">
                        <label class="title filter-label" id="fp_flbl_dropdown">{{ filter.label }}  </label>
                        <form action="#" class="meta-field-flter">
                          <ul
                            class=""
                            style="max-height: 15rem;"
                            data-simplebar
                            data-simplebar-auto-hide="false"
                          >
                            {%- for filter_value in filter.values -%}
                              <li
                                {% if colorbg == true -%}
                                  class="d-inline"
                                {%- endif %}
                              >
                                <div class="checkbox_item a-filter add-filter">
                                  <input
                                    type="checkbox"
                                    name="{{ filter_value.param_name }}"
                                    value="{{ filter_value.value }}"
                                    id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                    url_to_add="{{ filter_value.url_to_add }}"
                                    url_to_remove="{{ filter_value.url_to_remove }}"
                                    {% if filter_value.active %}
                                      checked
                                    {% endif %}
                                    title="{{ filter_value.label | escape }}"
                                    {% if filter_value.count == 0 and filter_value.active == false %}
                                      disabled
                                    {% endif %}
                                    class="
                                      form-check-input {% if colorbg == true -%}
                                        {{ filter_value.label | downcase | handleize | prepend: 'bg-' }}
                                      {%- endif -%}
                                    "
                                  >
                                  <label
                                    for="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                    {%- if colorbg == true -%}
                                      class="visually-hidden"
                                    {%- endif -%}
                                  >
                                    {{- filter_value.label }}
                                    <span>({{ filter_value.count }})</span></label
                                  >
                                </div>
                              </li>
                            {%- endfor -%}
                          </ul>
                        </form>
                      </div>
                    {%- when 'price_range' -%}
                      <div class="widget pricing_range  filter-attribute-container">
                        <label class="title filter-label" id="fp_{{ filter.label | handleize }}_dropdown">
                          {{ filter.label }}
                           
                        </label>
                        <div id="slider-range" class="slider-range"></div>
                        <div class="price-text d-flex align-items-center">
                          {% comment %} <span>{{ filter.label }}:</span> {% endcomment %}
                          <input
                            class="hidden"
                            name="{{ filter.max_value.param_name }}"
                            id="slider-data"
                            data-currency="{{ cart.currency.symbol }}"
                            readonly
                            url_to_add="{{ filter_value.url_to_add }}"
                            url_to_remove="{{ filter_value.url_to_remove }}"
                            {% if filter.min_value.value -%}
                              data-minn="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                            {% else %}
                              data-minn="0"
                            {%- endif %}
                            {% if filter.max_value.value -%}
                              data-maxx="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                            {% else %}
                              data-maxx="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                            {%- endif %}
                            type="text"
                            placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                            min="0"
                            max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                          >
                        </div>
                      </div>
                  {%- endcase -%}
                {%- endfor -%}
              </div>
            {% elsif block.type == '@app' %}
              {% render block %}
            {% elsif block.type == 'image' %}
              <!-- Sidebar image section -->
              {% if block.settings.collection_side_image != blank %}
                <div class="banner-static static-sidebar">
                  <div class="image">
                    <a href="{{ block.settings.collection_side_link }}">
                      <img
                        {% if settings.lazyloading_enable %}
                          class="lazyload" data-
                        {% endif -%}
                        src="{{ block.settings.collection_side_image | image_url }}"
                        alt="{{ block.settings.collection_side_image.alt }}"
                        width="{{ block.settings.collection_side_image.width }}"
                        height="{{ block.settings.collection_side_image.height }}"
                      >
                    </a>
                  </div>
                </div>
              {% endif %}
            {% elsif block.type == 'multi_level_filter' %}
              <div class="filter-attribute-container filter-filters">
                {% if block.settings.heading != blank %}
                  <label class="filter-label">{{ block.settings.heading }}  <span class="dropdown-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg></span></label>
                {% endif %}
                <div class="list-group-item">
                  <div class="booking-form sidebar">
                     <form>
          <div class="row">
            <div class="col-sm-3">
              <div class="form-group">
                <span class="form-label">{{ 'general.year_make_model.make' | t }}</span>
                <select name="optone" id="makeSel" size="1" placeholder="{{ 'general.year_make_model.make' | t }}" class="form-control">
                  <option value="" selected="selected">{{ 'general.year_make_model.make' | t }}</option>
                </select>
                <span class="select-arrow"></span>
              </div>
            </div>
            <div class="col-sm-3">
              <div class="form-group">
                <span class="form-label">{{ 'general.year_make_model.model' | t }}</span>
                <select name="opttwo" id="modelSel" size="1" placeholder="{{ 'general.year_make_model.model' | t }}" class="form-control">
                  <option value="" selected="selected">{{ 'general.year_make_model.model' | t }}</option>
                </select>
                <span class="select-arrow"></span>
              </div>
            </div>
            <div class="col-sm-3">
              <div class="form-group">
                <span class="form-label">Generation</span>
                <select name="optthree" id="yearSel" size="1" placeholder="Generation" class="form-control">
                  <option value="" selected="selected">Generation</option>
                </select>
                <span class="select-arrow"></span>
              </div>
            </div>
            <div class="col-sm-3">
              <div class="form-group">
                <span class="form-label">&nbsp;</span>
                <div class="form-btn">
                    <button type="button" id="main-sumbit-button" class="submit-btn">{{ 'general.year_make_model.search' | t }}</button>
                </div>
              </div>
            </div>
          </div>
        </form>
                     <style>
                    #shopify-section-{{section.id }} .booking-form.sidebar {
                      box-shadow: none;
                      border-radius: unset;
                      padding: 0 0 1.5rem 0;
                      max-width: unset;
                      background: none;
                    }
                    #shopify-section-{{section.id }} .booking-form.sidebar .form-label {
                      display: none;
                    }
                    @media(min-width: 768px){
                      #shopify-section-{{section.id }} .container-relative {
                        position: relative;
                        width: 100%; /* Full width or any specific width */
                      }
                    }
                    @media(max-width: 991px){
                      #shopify-section-{{section.id }} .booking-form {
                        padding: 20px 10px;
                      }
                      #shopify-section-{{section.id }} .booking-form .form-label {
                        display: none;
                      }
                    }
                      @media(max-width: 767px){
                      #shopify-section-{{section.id }} .booking-form {
                        padding: 40px 10px 10px;
                        margin: 0;
                      }
                      #shopify-section-{{section.id }} .booking-form .form-label {
                        display: none;
                      }
                    }
                    #shopify-section-{{section.id }} .centered-div .booking-form {
                      background-color: rgba(255, 255, 255, 0.5);
                    }
                  </style>
                   
                  </div>
                 
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
    <script type="text/javascript">
      $('.filter-attribute-container').find('a').addClass('advanced-filter a-filter add-filter');
      $('#adil').find('a').addClass('active-filter a-filter add-filter');
    </script>
  </div>
</aside>
<script>
 
  document.addEventListener('DOMContentLoaded', () => {
    const customProducts = document.getElementById('custom-products');
    const filterBar = document.getElementById('top_filter_bar');
    const sideFilterBar = document.getElementById('side_filter_bar');
    const sliderRange = document.getElementById('slider-range');
    const activeFilters = document.getElementById('active-filters');

    if ('{{ section.settings.show_pagination_bar }}' == 'false') {
      // Moved repeated DOM queries here
      let next_url = customProducts.dataset.nextUrl;
      const loadMoreBtn = document.querySelector('#more .button span');
      const loadMoreSpinner = document.querySelector('#more .fa-spinner');

      async function getNextPage() {
        try {
          let res = await fetch(next_url, {
            headers: {
              'Cache-Control': 'no-cache',
            },
          });
          return await res.text();
        } catch (error) {
          console.error(error); // Perhaps handle this more gracefully
        }
      }

      async function loadMoreProducts() {
        loadMoreBtn.classList.add('hidden');
        loadMoreSpinner.classList.remove('hidden');
        const nextPage = await getNextPage();

        const parser = new DOMParser();
        const nextPageDoc = parser.parseFromString(nextPage, 'text/html');

        const productGrid = nextPageDoc.getElementById('custom-products');
        const newUrl = productGrid.dataset.nextUrl;
        filterCollParam(next_url, false);
        customProducts.dataset.nextUrl = newUrl;
        next_url = newUrl;
        if (newUrl) {
          setTimeout(function () {
            loadMoreBtn.classList.remove('hidden');
            loadMoreSpinner.classList.add('hidden');
          }, 500);
        } else {
          setTimeout(function () {
            loadMoreBtn.classList.add('hidden'); // Consider if you want to hide or disable the button
            loadMoreSpinner.classList.add('hidden');
          }, 500);
        }
      }
      window.loadMoreProducts = loadMoreProducts;
    }

    document.body.addEventListener('change', function (event) {
      const target = event.target;

      // For filterBar and sideFilterBar
      if (target.matches('input[type=checkbox],input[type=radio]')) {
        event.preventDefault();
        const url = target.checked ? target.getAttribute('url_to_add') : target.getAttribute('url_to_remove');
        filterCollParam(url);
      }
       
    });

    document.body.addEventListener('click', function (event) {
      const target = event.target;

      // For activeFilters
      if (
        target.matches('.top_popular_tags .tag_item') ||
        target.matches('.top_popular_tags .tag_item span') ||
        target.matches('.top_popular_tags .allclear_btn')
      ) {
        event.preventDefault();
        let url = target.getAttribute('href');
        filterCollParam(url);
      }
      // Check if the target is one of the .filter-attribute-container a elements
      if (target.matches('.filter-attribute-container a.advanced-filter.a-filter.add-filter')) {
        event.preventDefault();
        let url = target.getAttribute('href');
        filterCollParam(url);
      }
      if ('{{ section.settings.show_pagination_bar }}' == 'false') {
        // Check if the clicked element is the #more element
        if (target.matches('#more a span')) {
          loadMoreProducts(event);
        }
      }
    });

    function debounce(func, wait, immediate) {
      let timeout;
      return function () {
        const context = this,
          args = arguments;
        const later = function () {
          timeout = null;
          if (!immediate) func.apply(context, args);
        };
        const callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
      };
    }

    function initSlider() {
      if (document.getElementById('slider-range')) {
        const sliderRange = document.getElementById('slider-range');
        const amount = document.querySelector('#slider-data');
        const minVal = Number(amount.dataset.minn);
        const maxVal = Number(amount.dataset.maxx);
        const maxRange = Number(amount.getAttribute('max'));
        const sliderCurrency = amount.dataset.currency;

        // add nouislider script
        noUiSlider.create(sliderRange, {
          start: [minVal, maxVal],
          connect: true,
          tooltips: true,
          range: {
            min: 0,
            max: maxRange,
          },
        });

        sliderRange.noUiSlider.on('change', function (values, handle) {
          // handle 0 is the left handle, handle 1 is the right handle
          const leftValue = values[0];
          const rightValue = values[1];
          // do something with the values
          const url = document.URL;
          const hasParams = url.indexOf('?') > -1;
          let updatedUrl = '';
          if (hasParams) {
            updatedUrl = replaceUrlParam(url, 'filter.v.price.lte', rightValue);
            updatedUrl = replaceUrlParam(updatedUrl, 'filter.v.price.gte', leftValue);
          } else {
            updatedUrl = `${url}?filter.v.price.lte=${rightValue}&filter.v.price.gte=${leftValue}`;
          }
          filterCollParam(updatedUrl);
        });
      }
    }

    window.initSlider = initSlider;

    initSlider();
    
  });
</script>
<script>
document.addEventListener("click", function(event) {
  if (event.target.classList.contains("filter-label")) {
    event.target.classList.toggle("active");
    var panel = event.target.nextElementSibling;
    if (panel.style.display === "block") {
      panel.style.display = "none";
    } else {
      panel.style.display = "block";
    }
  }
});
</script>
<script>
if (window.innerWidth < 992) {
  document.addEventListener("DOMContentLoaded", function() {
    setTimeout(function() {
      var acc = document.getElementsByClassName("filter-label");
      for (var i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function() {
          this.classList.toggle("active");
          var panel = this.nextElementSibling;
          if (panel.style.display === "block") {
            panel.style.display = "none";
          } else {
            panel.style.display = "block";
          }
        });
      }
    }, 2000);
  });
}
</script>
{{ 'makeObject.js' | asset_url | script_tag }} 
                    <script type="text/javascript">
 // This section creates the dynamic dropdowns

  window.onload = function() {
    var makeSel = document.getElementById("makeSel"),
        modelSel = document.getElementById("modelSel"),
        yearSel = document.getElementById("yearSel");
    for (var make in makeObject) {
      makeSel.options[makeSel.options.length] = new Option(make, make);
    }
    makeSel.onchange = function() {
      modelSel.length = 1; // remove all options bar first
      yearSel.length = 1; // remove all options bar first
      if (this.selectedIndex < 1) return; // done   
      for (var model in makeObject[this.value]) {
        modelSel.options[modelSel.options.length] = new Option(model, model);
      }
    }
    makeSel.onchange(); // reset in case page is reloaded
    modelSel.onchange = function() {
      yearSel.length = 1; // remove all options bar first
      if (this.selectedIndex < 1) return; // done   
      var years = makeObject[makeSel.value][this.value];
      for (var i = 0; i < years.length; i++) {
        yearSel.options[yearSel.options.length] = new Option(years[i], years[i]);
      }
    }
  }

  // The buildUrl function creates the query string on the values of the IDs in the HTML below

  function buildUrl() {
    var url = "";  // Change this line to your home page URL
    var make = document.querySelector('#makeSel').value;
    var model = document.querySelector('#modelSel').value;
    var year = document.querySelector('#yearSel').value;
    var qs = encodeURIComponent(make + ' ' + model + ' ' + year);
    if (qs.length > 0) {
      url = url + "/collections/all?constraint=" + qs;
      //url = url + "/search?type=product&q=" + qs;
    }
    return url;
  }

document.addEventListener('DOMContentLoaded', function() {
    document.addEventListener('click', function(event) {
        if (event.target && event.target.id === 'main-sumbit-button') {
            event.stopImmediatePropagation();
            var make = document.getElementById('makeSel').value.toLowerCase().replace(/\s/g, '-');
            var model = document.getElementById('modelSel').value.toLowerCase().replace(/\s/g, '-');
            var year = document.getElementById('yearSel').value.toLowerCase().replace(/\s/g, '-').replace(/\+/g, '');
            console.log("Year: ", year);
            var url = window.location.origin + "/collections/all/make_" + make + "+model_" + model + "+gen_" + year;
            url = url.replaceAll(' ', '-'); // Note: replaceAll() is not supported in all browsers
            console.log("URL binarychai: ", url);
            window.location.href = url;
            return false;
        }
    });
});




</script>
